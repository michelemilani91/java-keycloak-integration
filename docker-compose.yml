version: "3.8"

services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.1
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_HEALTH_ENABLED=true
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - postgres
    healthcheck:
      test: "curl -f http://localhost:8080/health/ready || exit 1"
    networks:
      - java-keycloak-integration-network

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: "pg_isready -U postgres"
    networks:
      - java-keycloak-integration-network

  spring-boot:
    container_name: app
    image: openjdk:17-oracle
    hostname: app.milani.dev
    working_dir: /app
    volumes:
      - ./:/app
    command:
      - /bin/sh
      - -c
      - './mvnw clean spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"'
    ports:
      - "9080:9080"
      - '5005:5005'
    depends_on:
      - keycloak
    networks:
      - java-keycloak-integration-network

networks:
  java-keycloak-integration-network:
    name: java-keycloak-integration